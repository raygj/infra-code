input {
  file {
    path => ["/var/log/network.log"]
    start_position => "beginning"
    type => "syslog"
 }
}
filter {
  # process firewall messages
  grok {
    match => { "message" => "<%{TIMESTAMP_ISO8601:timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_source} %{WORD:ActionTaken} (?:.*)%{IP:src_ip} (?:.*)%{IP:dst_ip} (?:.*)%{INT:src_port} (?:.*)%{INT:dst_port}" }
    add_tag => ["firewall_log"]
 }
  grok {
  match => { "message" => "<%{TIMESTAMP_ISO8601:timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_source} %{GREEDYDATA:syslog_message}" }
  add_tag => ["info_log"]
 }
 }
output {
  # first deal with any non-matches
  if [type] == "syslog" and "_grokparsefailure" in [tags] {
    file { path => "/tmp/log/failed_syslog_events-%{+YYYY-MM-dd}" }
  # then send the rest of the to elastic for indexing
  } else {
    elasticsearch {
    protocol => "node"
    host => "127.0.0.1"
    cluster => "elasticsearch"
  }
 }
}